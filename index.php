<?php
/*
   Plugin Name: Unix XML Sidtechno
   Plugin URI: https://sidtechno.com
   description: >-
   a plugin to create Unix XML format
   Version: 1.2
   Author: Sid Techno
   Author URI: https://sidtechno.com
   License: GPL2
*/
add_action( 'init', 'unix_xml_sidtechno' );

function unix_xml_sidtechno() {
     if( isset( $_GET['unix_xml'] ) ) {
         header('Content-Type: '.feed_content_type('rss-http').'; charset='.get_option('blog_charset'), true);
         echo '<?xml version="1.0" encoding="'.get_option('blog_charset').'"?'.'>';
         if(isset($_GET['limit'])) {
            $limit = $_GET['limit'];
         } else {
            $limit = -1;
         }
         if(isset($_GET['offset'])) {
            $offset = $_GET['offset'];
         } else {
            $offset = 0;
         }
         $args = array(
           'numberposts' => $limit,
           'offset' => $offset,
           'post_type'   => 'product'
         );

         $products = get_posts( $args );?>
         <!DOCTYPE ONIXMessage SYSTEM "http://www.editeur.org/onix/2.1/02/reference/onix-international.dtd">
         <ONIXMessage>
            <Header>
               <FromCompany><?php echo get_bloginfo();?></FromCompany>
               <FromEmail><?php echo get_option('admin_email');?></FromEmail>
               <SentDate><?php echo time();?></SentDate>
               <MessageNote>Generated by <?php echo get_bloginfo();?></MessageNote>
               <DefaultLanguageOfText>eng</DefaultLanguageOfText>
            </Header>
            <?php
            if ( $products ) {

               foreach ( $products  as $product ) {
                  $wc_product = wc_get_product( $product->ID );
                  $url = explode('uploads/', wp_get_attachment_url( get_post_thumbnail_id($product->ID), 'thumbnail' ));
                  $author_categories = array(); 
                  $categories = get_the_terms( $product->ID, 'product_cat' );
                  foreach ($categories as $category_key => $category) {
                     if($category->parent == '2525') {
                        $author_categories[] = $category; 
                     }
                  }
                  ?>
                  <Product>
                     <RecordReference><?php echo $product->ID;?></RecordReference>
                     <NotificationType>03</NotificationType>
                     <ProductIdentifier>
                        <ProductIDType>02</ProductIDType>
                        <IDValue><?php echo $product->ID;?></IDValue>
                     </ProductIdentifier>
                     <Barcode>10</Barcode>
                     <ProductForm>BC</ProductForm>
                     <ProductFormDetail>B102</ProductFormDetail>
                     <Title>
                        <TitleType>01</TitleType>
                        <TitleText><?php echo $product->post_title;?></TitleText>
                     </Title>
                     <?php 
                     $contribute_sequence = 1;
                     foreach ($author_categories as $author_categories_key => $author_categories_value) {
                        $t_id = $author_categories_value->term_id;
                        $term_meta = get_option( "taxonomy_$t_id" )?>
                        <Contributor>
                           <SequenceNumber><?php echo $contribute_sequence;?></SequenceNumber>
                           <ContributorRole>B01</ContributorRole>
                           <PersonName><?php echo $author_categories_value->name;?></PersonName>
                           <?php if(!empty(esc_attr( $term_meta['PersonNameInverted'] ))) { ?>
                              <PersonNameInverted><?php echo esc_attr( $term_meta['PersonNameInverted'] );?></PersonNameInverted>
                           <?php } else {?>
                              <PersonNameInverted>TBA</PersonNameInverted>
                           <?php } ?>
                           <?php if(!empty(esc_attr( $term_meta['NamesBeforeKey'] ))) { ?>
                              <NamesBeforeKey><?php echo esc_attr( $term_meta['NamesBeforeKey'] );?></NamesBeforeKey>
                           <?php } else {?>
                              <NamesBeforeKey>TBA</NamesBeforeKey>
                           <?php } ?>
                           <?php if(!empty(esc_attr( $term_meta['KeyNames'] ))) { ?>
                              <KeyNames><?php echo esc_attr( $term_meta['KeyNames'] );?></KeyNames>
                           <?php } else {?>
                              <KeyNames>TBA</KeyNames>
                           <?php } ?>
                           <?php if(!empty(esc_attr( $term_meta['CountryCode'] ))) { ?>
                              <CountryCode><?php echo esc_attr( $term_meta['CountryCode'] );?></CountryCode>
                           <?php } else {?>
                              <CountryCode>TBA</CountryCode>
                           <?php } ?>
                        </Contributor>
                     <?php $contribute_sequence++; }?>
                     <?php $get_languages = get_post_meta(get_the_ID(),'_LanguageCode', true);
                     if(!empty($get_languages)) {
                        foreach ($get_languages as $get_languages_key => $get_languages_value) { ?>
                        <Language>
                           <LanguageRole>01</LanguageRole>
                           <LanguageCode><?php echo $get_languages_value;?></LanguageCode>
                        </Language>
                        <?php }
                     } ?>
                     <NumberOfPages><?php echo get_post_meta($product->ID,'_NumberOfPages', true); ?></NumberOfPages>
                     <MainSubject>
                        <MainSubjectSchemeIdentifier>10</MainSubjectSchemeIdentifier>
                        <SubjectSchemeVersion>2.01</SubjectSchemeVersion>
                        <?php if(!empty(get_post_meta($product->ID,'_SubjectCode', true))) {?>
                           <SubjectCode><?php echo get_post_meta($product->ID,'_SubjectCode', true);?></SubjectCode>
                        <?php } else { ?>
                           <SubjectCode>PHI001000</SubjectCode>
                        <?php } ?>
                        
                     </MainSubject>
                     <?php if(!empty(get_post_meta($product->ID,'_AudienceCode', true))) {?>
                        <AudienceCode><?php echo get_post_meta($product->ID,'_AudienceCode', true);?></AudienceCode>
                     <?php } else { ?>
                        <AudienceCode>05</AudienceCode>
                     <?php } ?>
                     <OtherText>
                        <TextTypeCode>18</TextTypeCode>
                        <TextFormat>06</TextFormat>
                        <Text><?php echo $product->post_content;?></Text>
                     </OtherText>

                     <?php $url = explode('uploads/', wp_get_attachment_url( get_post_thumbnail_id($product->ID), 'thumbnail' )); ?>
                     <?php if(isset($url[1])) { ?>
                        <MediaFile>
                           <MediaFileTypeCode>04</MediaFileTypeCode>
                           <MediaFileFormatCode>03</MediaFileFormatCode>
                           <MediaFileLinkTypeCode>06</MediaFileLinkTypeCode>
                           <MediaFileLink><?php echo $url[1];?></MediaFileLink>
                        </MediaFile>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_ImprintName', true))) {?>
                        <Imprint>
                           <ImprintName><?php echo get_post_meta($product->ID,'_ImprintName', true);?></ImprintName>
                        </Imprint>
                     <?php }?>
                     <?php if(!empty(get_post_meta($product->ID,'_PublisherName', true))) {?>
                        <Publisher>
                           <PublishingRole>01</PublishingRole>
                           <PublisherName><?php echo get_post_meta($product->ID,'_PublisherName', true);?></PublisherName>
                        </Publisher>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_CityOfPublication', true))) {?>
                        <CityOfPublication><?php echo get_post_meta($product->ID,'_CityOfPublication', true);?></CityOfPublication>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_CountryOfPublication', true))) {?>
                        <CountryOfPublication><?php echo get_post_meta($product->ID,'_CountryOfPublication', true);?></CountryOfPublication>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_PublishingStatus', true))) {?>
                        <PublishingStatus><?php echo get_post_meta($product->ID,'_PublishingStatus', true);?></PublishingStatus>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_PublicationDate', true))) {?>
                        <PublicationDate><?php echo get_post_meta($product->ID,'_PublicationDate', true);?></PublicationDate>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_SaleRightsCountry', true))) {?>
                        <SalesRights>
                           <SalesRightsType>01</SalesRightsType>
                           <RightsCountry><?php echo get_post_meta($product->ID,'_SaleRightsCountry', true);?></RightsCountry>
                        </SalesRights>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_WeightInGram', true))) {?>
                        <Measure>
                           <MeasureTypeCode>08</MeasureTypeCode>
                           <Measurement><?php echo get_post_meta($product->ID,'_WeightInGram', true);?></Measurement>
                           <MeasureUnitCode>gr</MeasureUnitCode>
                        </Measure>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_Inch01', true))) {?>
                        <Measure>
                           <MeasureTypeCode>01</MeasureTypeCode>
                           <Measurement><?php echo get_post_meta($product->ID,'_Inch01', true);?></Measurement>
                           <MeasureUnitCode>in</MeasureUnitCode>
                        </Measure>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_Inch02', true))) {?>
                        <Measure>
                           <MeasureTypeCode>02</MeasureTypeCode>
                           <Measurement><?php echo get_post_meta($product->ID,'_Inch02', true);?></Measurement>
                           <MeasureUnitCode>in</MeasureUnitCode>
                        </Measure>
                     <?php } ?>
                     <?php if(!empty(get_post_meta($product->ID,'_Inch03', true))) {?>
                        <Measure>
                           <MeasureTypeCode>03</MeasureTypeCode>
                           <Measurement><?php echo get_post_meta($product->ID,'_Inch03', true);?></Measurement>
                           <MeasureUnitCode>in</MeasureUnitCode>
                        </Measure>
                     <?php } ?>

                     <SupplyDetail>
                        <?php if(!empty(get_post_meta($product->ID,'_SupplierName', true))) {?>
                           <SupplierName><?php echo get_post_meta($product->ID,'_SupplierName', true);?></SupplierName>
                        <?php } ?>
                        <?php if(!empty(get_post_meta($product->ID,'_ReturnsCodeType', true))) {?>
                           <ReturnsCodeType><?php echo get_post_meta($product->ID,'_ReturnsCodeType', true);?></ReturnsCodeType>
                        <?php } ?>
                        <?php if(!empty(get_post_meta($product->ID,'_ReturnsCode', true))) {?>
                           <ReturnsCode><?php echo get_post_meta($product->ID,'_ReturnsCode', true);?></ReturnsCode>
                        <?php } ?>
                        <?php if(!empty(get_post_meta($product->ID,'_ProductAvailability', true))) {?>
                           <ProductAvailability><?php echo get_post_meta($product->ID,'_ProductAvailability', true);?></ProductAvailability>
                        <?php } ?>
                        <?php if(!empty(get_post_meta($product->ID,'_PackQuantity', true))) {?>
                           <PackQuantity><?php echo get_post_meta($product->ID,'_PackQuantity', true);?></PackQuantity>
                        <?php } ?>
                        <Price>
                           <PriceTypeCode>01</PriceTypeCode>
                           <PriceAmount><?php echo $wc_product->get_price();?></PriceAmount>
                           <CurrencyCode>USD</CurrencyCode>
                           <TaxRateCode1>Z</TaxRateCode1>
                           <TaxRatePercent1>0</TaxRatePercent1>
                           <TaxableAmount1><?php echo $wc_product->get_price();?></TaxableAmount1>
                           <TaxAmount1>0.00</TaxAmount1>
                        </Price>
                     </SupplyDetail>
                  </Product>
               <?php }
            }?>
         </ONIXMessage>
         <?php
         exit();

         $xml = '
            <Product>
               <RecordReference>9781551116853</RecordReference>
               <NotificationType>03</NotificationType>
               <ProductIdentifier>
                  <ProductIDType>02</ProductIDType>
                  <IDValue>1551116855</IDValue>
               </ProductIdentifier>
               <ProductIdentifier>
                  <ProductIDType>03</ProductIDType>
                  <IDValue>9781551116853</IDValue>
               </ProductIdentifier>
               <ProductIdentifier>
                  <ProductIDType>15</ProductIDType>
                  <IDValue>9781551116853</IDValue>
               </ProductIdentifier>
               <Barcode>10</Barcode>
               <ProductForm>BC</ProductForm>
               <ProductFormDetail>B102</ProductFormDetail>
               <Title>
                  <TitleType>01</TitleType>
                  <TitleText>The Aesthetics Of Human Environments</TitleText>
               </Title>
               <Contributor>
                  <SequenceNumber>1</SequenceNumber>
                  <ContributorRole>B01</ContributorRole>
                  <PersonName>Arnold Berleant</PersonName>
                  <PersonNameInverted>Berleant, Arnold</PersonNameInverted>
                  <NamesBeforeKey>Arnold</NamesBeforeKey>
                  <KeyNames>Berleant</KeyNames>
                  <CountryCode>US</CountryCode>
               </Contributor>
               <Contributor>
                  <SequenceNumber>2</SequenceNumber>
                  <ContributorRole>B01</ContributorRole>
                  <PersonName>Allen Carlson</PersonName>
                  <PersonNameInverted>Carlson, Allen</PersonNameInverted>
                  <NamesBeforeKey>Allen</NamesBeforeKey>
                  <KeyNames>Carlson</KeyNames>
                  <CountryCode>CA</CountryCode>
               </Contributor>
               <Language>
                  <LanguageRole>01</LanguageRole>
                  <LanguageCode>eng</LanguageCode>
               </Language>
               <NumberOfPages>312</NumberOfPages>
               <MainSubject>
                  <MainSubjectSchemeIdentifier>10</MainSubjectSchemeIdentifier>
                  <SubjectSchemeVersion>2.01</SubjectSchemeVersion>
                  <SubjectCode>PHI001000</SubjectCode>
               </MainSubject>
               <AudienceCode>05</AudienceCode>
               <OtherText>
                  <TextTypeCode>18</TextTypeCode>
                  <TextFormat>06</TextFormat>
                  <Text>The Aesthetics of Human Environments is a companion volume to Carlson\'s and Berleant\'s The Aesthetics of Natural Environments. Whereas the earlier collection focused on the aesthetic appreciation of nature, The Aesthetics of Human Environments investigates philosophical and aesthetics issues that arise from our engagement with human environments ranging from rural landscapes to urban cityscapes. Our experience of public spaces such as shopping centers, theme parks, and gardens as well as the impact of our personal living spaces on the routine activities of our everyday life are discussed in terms of their aesthetic value and the nature of our aesthetic appreciation.

            This volume will appeal to any reader concerned about the aesthetic quality of the world in which we live.

            </Text>
               </OtherText>
               <OtherText>
                  <TextTypeCode>01</TextTypeCode>
                  <TextFormat>06</TextFormat>
                  <Text>The Aesthetics of Human Environments is a companion volume to Carlson\'s and Berleant\'s The Aesthetics of Natural Environments. Whereas the earlier collection focused on the aesthetic appreciation of nature, The Aesthetics of Human Environments investigates philosophical and aesthetics issues that arise from our engagement with human environments ranging from rural landscapes to urban cityscapes. Our experience of public spaces such as shopping centers, theme parks, and gardens as well as the impact of our personal living spaces on the routine activities of our everyday life are discussed in terms of their aesthetic value and the nature of our aesthetic appreciation.

            This volume will appeal to any reader concerned about the aesthetic quality of the world in which we live.</Text>
               </OtherText>
               <OtherText>
                  <TextTypeCode>08</TextTypeCode>
                  <TextFormat>06</TextFormat>
                  <Text>"Our aesthetics, when it is not about art, tends to be about the countryside. But most of us live in urban environments. The Aesthetics of Human Environments will deepen our sensitivity to, and better our understanding of, our surroundings as we go about our daily lives. A successful combination of theory and practice, it cannot fail to arouse our interest, for it covers a wide range of topics, many of them within our common experience." - T.J. Diffey, Emeritus Reader in Philosophy, University of Sussex

            "Scholarly integrity permeates every level of this anthology. Berleant and Carlson have selected essays that reflect a range of approaches toward a common goal: the elucidation of an emergent field. In particular, the international and methodological pluralism of the collection lends cultural breadth to an undertaking that nevertheless coalesces eloquently into a unified volume, accessible to a broad spectrum of readers." - Cheryl Foster, University of Rhode Island

            "The Aesthetics of Human Environments is a collection of essays that investigates matters related to the aesthetic marks humans intentionally and directly make on their environments and the aesthetic appreciation of those marks. This collection is exciting in its breadth and gratifyingly insightful into some of the frequently overlooked ways humans aesthetically interact with the world. These provocative essays will encourage readers to appreciate the rich and varied ways aesthetic issues are of serious theoretical and practical interest in daily life. Personally, I can’t wait to incorporate it into a class!" - Sheila Lintott, Bucknell University</Text>
               </OtherText>
               <OtherText>
                  <TextTypeCode>13</TextTypeCode>
                  <TextFormat>06</TextFormat>
                  <Text>Arnold Berleant is Professor of Philosophy (Emeritus) at Long Island University. Dr. Berleant is Past President of the International Association for Aesthetics and President of the International Advisory Committee of the International Institute of Applied Aesthetics (IIAA).

            Allen Carlson is Professor of Philosophy at the University of Alberta, Edmonton, Canada, and currently holds a University of Alberta Research Professorship.</Text>
               </OtherText>
               <OtherText>
                  <TextTypeCode>04</TextTypeCode>
                  <TextFormat>06</TextFormat>
                  <Text>List of Illustrations

            Preface

            Acknowledgments

            Introduction: The Aesthetics of Human Environments
            Arnold Berleant and Allen Carlson

            1. On Aesthetically Appreciating Human Environments
            Allen Carlson
            2. Urban Richness and the Art of Building
            Pauline von Bonsdorff
            3. Cultivating an Urban Aesthetic
            Arnold Berleant
            4. Multi-sensoriness and the City
            Yrjö Sepänmaa
            5. Walking the City
            David Macauley
            6. The Last Stop of Desire: The Aesthetics of the Shopping Center
            Mikita Brottman
            7. Deconstructing Disney World
            Arnold Berleant
            8. Cultivating Commonplaces: Sophisticated Vernacularism in Japan
            Barbara Sandrisser
            9. Everyday Surface Aesthetic Qualities: Neat, Messy, Clean, Dirty
            Thomas Leddy
            10. Living in Glass Houses: Domesticity, Interior Decoration, and Environmental Aesthetics
            Kevin Melchionne
            11. The Aesthetics of Playtime Recycling
            Janet McCracken
            12. The Role of Aesthetics in Civic Environmentalism
            Yuriko Saito
            13. The Garden and the Red Barn: The Pervasive Pastoral and Its Environmental Consequences
            Sally Schauman
            14. On Appreciating Agricultural Landscapes
            Allen Carlson
            15. Gardens, Nature, Pleasure
            Stephanie Ross
            16. The View from the Road and the Picturesque
            Malcolm Andrews

            Notes on Contributors

            Sources

            Index

            </Text>
               </OtherText>
               <MediaFile>
                  <MediaFileTypeCode>04</MediaFileTypeCode>
                  <MediaFileFormatCode>03</MediaFileFormatCode>
                  <MediaFileLinkTypeCode>06</MediaFileLinkTypeCode>
                  <MediaFileLink>9781551116853.jpg</MediaFileLink>
               </MediaFile>
               <Imprint>
                  <ImprintName>Broadview Press</ImprintName>
               </Imprint>
               <Publisher>
                  <PublishingRole>01</PublishingRole>
                  <PublisherName>Broadview Press</PublisherName>
               </Publisher>
               <CityOfPublication>Peterborough</CityOfPublication>
               <CountryOfPublication>CA</CountryOfPublication>
               <PublishingStatus>04</PublishingStatus>
               <PublicationDate>20070524</PublicationDate>
               <SalesRights>
                  <SalesRightsType>01</SalesRightsType>
                  <RightsCountry>CA US GB AU IE NZ ZA</RightsCountry>
               </SalesRights>
               <Measure>
                  <MeasureTypeCode>08</MeasureTypeCode>
                  <Measurement>528</Measurement>
                  <MeasureUnitCode>gr</MeasureUnitCode>
               </Measure>
               <Measure>
                  <MeasureTypeCode>01</MeasureTypeCode>
                  <Measurement>9</Measurement>
                  <MeasureUnitCode>in</MeasureUnitCode>
               </Measure>
               <Measure>
                  <MeasureTypeCode>02</MeasureTypeCode>
                  <Measurement>6</Measurement>
                  <MeasureUnitCode>in</MeasureUnitCode>
               </Measure>
               <Measure>
                  <MeasureTypeCode>03</MeasureTypeCode>
                  <Measurement>0.625</Measurement>
                  <MeasureUnitCode>in</MeasureUnitCode>
               </Measure>
               <SupplyDetail>
                  <SupplierName>Broadview Press</SupplierName>
                  <ReturnsCodeType>02</ReturnsCodeType>
                  <ReturnsCode>Y</ReturnsCode>
                  <ProductAvailability>20</ProductAvailability>
                  <PackQuantity>36</PackQuantity>
                  <Price>
                     <PriceTypeCode>01</PriceTypeCode>
                     <DiscountCoded>
                        <DiscountCodeType>02</DiscountCodeType>
                        <DiscountCodeTypeName>Broadview Press</DiscountCodeTypeName>
                        <DiscountCode>B</DiscountCode>
                     </DiscountCoded>
                     <PriceAmount>46.95</PriceAmount>
                     <CurrencyCode>CAD</CurrencyCode>
                     <TaxRateCode1>Z</TaxRateCode1>
                     <TaxRatePercent1>0</TaxRatePercent1>
                     <TaxableAmount1>46.95</TaxableAmount1>
                     <TaxAmount1>0.00</TaxAmount1>
                  </Price>
                  <Price>
                     <PriceTypeCode>01</PriceTypeCode>
                     <DiscountCoded>
                        <DiscountCodeType>02</DiscountCodeType>
                        <DiscountCodeTypeName>Broadview Press</DiscountCodeTypeName>
                        <DiscountCode>B</DiscountCode>
                     </DiscountCoded>
                     <PriceAmount>46.95</PriceAmount>
                     <CurrencyCode>USD</CurrencyCode>
                     <TaxRateCode1>Z</TaxRateCode1>
                     <TaxRatePercent1>0</TaxRatePercent1>
                     <TaxableAmount1>46.95</TaxableAmount1>
                     <TaxAmount1>0.00</TaxAmount1>
                  </Price>
               </SupplyDetail>
            </Product>';
         echo $xml;
     }
}

function custom_url_taxonomy_add_new_meta_field() {
   // this will add the custom meta field to the add new term page
   ?>
   <div class="form-field">
      <label for="term_meta[PersonNameInverted]"><?php _e( 'Person Name Inverted', 'PersonNameInverted' ); ?></label>
      <input type="text" name="term_meta[PersonNameInverted]" id="term_meta[PersonNameInverted]" value="">
   </div>
   <div class="form-field">
      <label for="term_meta[NamesBeforeKey]"><?php _e( 'Names Before Key', 'NamesBeforeKey' ); ?></label>
      <input type="text" name="term_meta[NamesBeforeKey]" id="term_meta[NamesBeforeKey]" value="">
   </div>
   <div class="form-field">
      <label for="term_meta[KeyNames]"><?php _e( 'Key Names', 'KeyNames' ); ?></label>
      <input type="text" name="term_meta[KeyNames]" id="term_meta[KeyNames]" value="">
   </div>
   <div class="form-field">
      <label for="term_meta[CountryCode]"><?php _e( 'Country Code (2-Code)', 'CountryCode' ); ?></label>
      <input type="text" name="term_meta[CountryCode]" id="term_meta[CountryCode]" value="">
   </div>
<?php
}
add_action( 'product_cat_add_form_fields', 'custom_url_taxonomy_add_new_meta_field', 10, 2 );

// Edit term page
function custom_url_taxonomy_edit_meta_field($term) {
 
   // put the term ID into a variable
   $t_id = $term->term_id;
 
   // retrieve the existing value(s) for this meta field. This returns an array
   $term_meta = get_option( "taxonomy_$t_id" ); ?>
   <tr class="form-field">
   <th scope="row" valign="top"><label for="term_meta[PersonNameInverted]"><?php _e( 'Person Name Inverted', 'PersonNameInverted' ); ?></label></th>
      <td>
         <input type="text" name="term_meta[PersonNameInverted]" id="term_meta[PersonNameInverted]" value="<?php echo esc_attr( $term_meta['PersonNameInverted'] ) ? esc_attr( $term_meta['PersonNameInverted'] ) : ''; ?>">
      </td>
   </tr>
   <tr class="form-field">
   <th scope="row" valign="top"><label for="term_meta[NamesBeforeKey]"><?php _e( 'Names Before Key', 'NamesBeforeKey' ); ?></label></th>
      <td>
         <input type="text" name="term_meta[NamesBeforeKey]" id="term_meta[NamesBeforeKey]" value="<?php echo esc_attr( $term_meta['NamesBeforeKey'] ) ? esc_attr( $term_meta['NamesBeforeKey'] ) : ''; ?>">
      </td>
   </tr>
   <tr class="form-field">
   <th scope="row" valign="top"><label for="term_meta[KeyNames]"><?php _e( 'Key Names', 'KeyNames' ); ?></label></th>
      <td>
         <input type="text" name="term_meta[KeyNames]" id="term_meta[KeyNames]" value="<?php echo esc_attr( $term_meta['KeyNames'] ) ? esc_attr( $term_meta['KeyNames'] ) : ''; ?>">
      </td>
   </tr>
   <tr class="form-field">
   <th scope="row" valign="top"><label for="term_meta[CountryCode]"><?php _e( 'Country Code (2 Character)', 'CountryCode' ); ?></label></th>
      <td>
         <input type="text" name="term_meta[CountryCode]" id="term_meta[CountryCode]" value="<?php echo esc_attr( $term_meta['CountryCode'] ) ? esc_attr( $term_meta['CountryCode'] ) : ''; ?>">
      </td>
   </tr>
<?php
}
add_action( 'product_cat_edit_form_fields', 'custom_url_taxonomy_edit_meta_field', 10, 2 );

// Save extra taxonomy fields callback function.
function save_taxonomy_custom_meta( $term_id ) {
   if ( isset( $_POST['term_meta'] ) ) {
      $t_id = $term_id;
      $term_meta = get_option( "taxonomy_$t_id" );
      $cat_keys = array_keys( $_POST['term_meta'] );
      foreach ( $cat_keys as $key ) {
         if ( isset ( $_POST['term_meta'][$key] ) ) {
            $term_meta[$key] = $_POST['term_meta'][$key];
         }
      }
      // Save the option array.
      update_option( "taxonomy_$t_id", $term_meta );
   }
}  
add_action( 'edited_product_cat', 'save_taxonomy_custom_meta', 10, 2 );  
add_action( 'create_product_cat', 'save_taxonomy_custom_meta', 10, 2 );



add_action('woocommerce_product_options_general_product_data', 'woocommerce_product_custom_fields');
// Save Fields
add_action('woocommerce_process_product_meta', 'woocommerce_product_custom_fields_save');
function woocommerce_product_custom_fields()
{
    global $woocommerce, $post;
    echo '<div class="product_custom_field">';
    // Custom Product Text Field
    woocommerce_wp_text_input(
        array(
            'id' => '_NumberOfPages',
            'placeholder' => 'Numbers of Pages',
            'label' => __('Numbers of Pages', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_SubjectCode',
            'placeholder' => 'Subject Code',
            'label' => __('Subject Code', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_AudienceCode',
            'placeholder' => 'Audience Code',
            'label' => __('Audience Code', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_ImprintName',
            'placeholder' => 'Imprint Name',
            'label' => __('Imprint Name', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_PublisherName',
            'placeholder' => 'Publisher Name',
            'label' => __('Publisher Name', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_CityOfPublication',
            'placeholder' => 'City Of Publication',
            'label' => __('City Of Publication', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_CountryOfPublication',
            'placeholder' => 'Country Of Publication',
            'label' => __('Country Of Publication', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_PublishingStatus',
            'placeholder' => 'Publishing Status',
            'label' => __('Publishing Status', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_PublicationDate',
            'placeholder' => 'Publication Date',
            'label' => __('Publication Date', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_SaleRightsCountry',
            'placeholder' => 'Sale Rights Country',
            'label' => __('Sale Rights Country', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_WeightInGram',
            'placeholder' => 'Weight In Gram',
            'label' => __('Weight In Gram', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_Inch01',
            'placeholder' => 'Inch 01',
            'label' => __('Inch 01', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_Inch02',
            'placeholder' => 'Inch 02',
            'label' => __('Inch 02', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_Inch03',
            'placeholder' => 'Inch 03',
            'label' => __('Inch 03', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_SupplierName',
            'placeholder' => 'Supplier Name',
            'label' => __('Supplier Name', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_ReturnsCodeType',
            'placeholder' => 'Returns Code Type',
            'label' => __('Returns Code Type', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_ReturnsCode',
            'placeholder' => 'Returns Code',
            'label' => __('Returns Code', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_ProductAvailability',
            'placeholder' => 'Product Availability',
            'label' => __('Product Availability', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    woocommerce_wp_text_input(
        array(
            'id' => '_PackQuantity',
            'placeholder' => 'Pack Quantity',
            'label' => __('Pack Quantity', 'woocommerce'),
            'desc_tip' => 'true'
        )
    );
    $post_id = get_the_ID();
    if(isset($post_id)) {
       $get_languages = get_post_meta(get_the_ID(),'_LanguageCode', true);
       if(empty($get_languages)) {
          echo '<p class="form-field _LanguageCode_field ">
            <label for="_LanguageCode">Language Code <span class="add_more_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').clone(); jQuery(html).insertBefore(\'._LanguageCode_field:first-of-type\');">Add More</span> | <span class="remove_this_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').remove();">Remove This</span></label><input type="text" class="short" style="" name="_LanguageCode[]" id="_LanguageCode" value="" placeholder="Language Code"> </p>';
          echo '</div>';
       }

       foreach ($get_languages as $get_languages_key => $get_languages_value) {
          echo '<p class="form-field _LanguageCode_field ">
            <label for="_LanguageCode">Language Code <span class="add_more_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').clone(); jQuery(html).insertBefore(\'._LanguageCode_field:first-of-type\');">Add More</span> | <span class="remove_this_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').remove();">Remove This</span></label><input type="text" class="short" style="" name="_LanguageCode[]" id="_LanguageCode" value="'.$get_languages_value.'" placeholder="Language Code"> </p>';
          echo '</div>';
       }
    } else {
       echo '<p class="form-field _LanguageCode_field ">
         <label for="_LanguageCode">Language Code <span class="add_more_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').clone(); jQuery(html).insertBefore(\'._LanguageCode_field:first-of-type\');">Add More</span> | <span class="remove_this_lanagage" style="color: blue;cursor: pointer;" onclick="var html = jQuery(this).closest(\'._LanguageCode_field\').remove();">Remove This</span></label><input type="text" class="short" style="" name="_LanguageCode[]" id="_LanguageCode" value="" placeholder="Language Code"> </p>';
       echo '</div>';
    }
}

function woocommerce_product_custom_fields_save($post_id)
{   
    $woocommerce_NumberOfPages = $_POST['_NumberOfPages'];
    if (!empty($woocommerce_NumberOfPages)) {
        update_post_meta($post_id, '_NumberOfPages', esc_attr($woocommerce_NumberOfPages));
    }
    $woocommerce_SubjectCode = $_POST['_SubjectCode'];
    if (!empty($woocommerce_SubjectCode)) {
        update_post_meta($post_id, '_SubjectCode', esc_attr($woocommerce_SubjectCode));
    }
    $woocommerce_AudienceCode = $_POST['_AudienceCode'];
    if (!empty($woocommerce_AudienceCode)) {
        update_post_meta($post_id, '_AudienceCode', esc_attr($woocommerce_AudienceCode));
    }
    $woocommerce_ImprintName = $_POST['ImprintName'];
    if (!empty($woocommerce_ImprintName)) {
        update_post_meta($post_id, '_ImprintName', esc_attr($woocommerce_ImprintName));
    }
    $woocommerce_PublisherName = $_POST['_PublisherName'];
    if (!empty($woocommerce_PublisherName)) {
        update_post_meta($post_id, '_PublisherName', esc_attr($woocommerce_PublisherName));
    }
    $woocommerce_CityOfPublication = $_POST['_CityOfPublication'];
    if (!empty($woocommerce_CityOfPublication)) {
        update_post_meta($post_id, '_CityOfPublication', esc_attr($woocommerce_CityOfPublicatione));
    }
    $woocommerce_PublisherName = $_POST['_PublisherName'];
    if (!empty($woocommerce_PublisherName)) {
        update_post_meta($post_id, '_PublisherName', esc_attr($woocommerce_PublisherName));
    }
    $woocommerce_CountryOfPublication = $_POST['_CountryOfPublication'];
    if (!empty($woocommerce_CountryOfPublication)) {
        update_post_meta($post_id, '_CountryOfPublication', esc_attr($woocommerce_CountryOfPublication));
    }
    $woocommerce_PublishingStatus = $_POST['_PublishingStatus'];
    if (!empty($woocommerce_PublishingStatus)) {
        update_post_meta($post_id, '_PublishingStatus', esc_attr($woocommerce_PublishingStatus));
    }
    $woocommerce_PublicationDate = $_POST['_PublicationDate'];
    if (!empty($woocommerce_PublicationDate)) {
        update_post_meta($post_id, '_PublicationDate', esc_attr($woocommerce_PublicationDate));
    }
    $woocommerce_SaleRightsCountry = $_POST['_SaleRightsCountry'];
    if (!empty($woocommerce_SaleRightsCountry)) {
        update_post_meta($post_id, '_SaleRightsCountry', esc_attr($woocommerce_SaleRightsCountry));
    }
    $woocommerce_WeightInGram = $_POST['_WeightInGram'];
    if (!empty($woocommerce_WeightInGram)) {
        update_post_meta($post_id, '_WeightInGram', esc_attr($woocommerce_WeightInGram));
    }
    $woocommerce_Inch01 = $_POST['_Inch01'];
    if (!empty($woocommerce_Inch01)) {
        update_post_meta($post_id, '_Inch01', esc_attr($woocommerce_Inch01));
    }
    $woocommerce_Inch02 = $_POST['_Inch02'];
    if (!empty($woocommerce_Inch02)) {
        update_post_meta($post_id, '_Inch02', esc_attr($woocommerce_Inch02));
    }
    $woocommerce_Inch03 = $_POST['_Inch03'];
    if (!empty($woocommerce_Inch03)) {
        update_post_meta($post_id, '_Inch03', esc_attr($woocommerce_Inch03));
    }
    $woocommerce_SupplierName = $_POST['_SupplierName'];
    if (!empty($woocommerce_SupplierName)) {
        update_post_meta($post_id, '_SupplierName', esc_attr($woocommerce_SupplierName));
    }
    $woocommerce_ReturnsCodeType = $_POST['_ReturnsCodeType'];
    if (!empty($woocommerce_ReturnsCodeType)) {
        update_post_meta($post_id, '_ReturnsCodeType', esc_attr($woocommerce_ReturnsCodeType));
    }
    $woocommerce_ReturnsCode = $_POST['_ReturnsCode'];
    if (!empty($woocommerce_ReturnsCode)) {
        update_post_meta($post_id, '_ReturnsCode', esc_attr($woocommerce_ReturnsCode));
    }
    $woocommerce_ProductAvailability = $_POST['_ProductAvailability'];
    if (!empty($woocommerce_ProductAvailability)) {
        update_post_meta($post_id, '_ProductAvailability', esc_attr($woocommerce_ProductAvailability));
    }
    $woocommerce_PackQuantity = $_POST['_PackQuantity'];
    if (!empty($woocommerce_PackQuantity)) {
        update_post_meta($post_id, '_PackQuantity', esc_attr($woocommerce_PackQuantity));
    }
    $woocommerce_LanguageCode = $_POST['_LanguageCode'];
    if (!empty($woocommerce_LanguageCode)) {
        update_post_meta($post_id, '_LanguageCode', $woocommerce_LanguageCode);
    }

}
